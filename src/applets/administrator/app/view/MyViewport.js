/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('administrator.view.MyViewport', {
    extend: 'Ext.container.Viewport',
    alias: 'widget.myviewport',

    requires: [
        'administrator.view.MyViewportViewModel',
        'Ext.panel.Panel',
        'Ext.form.FieldSet',
        'Ext.form.field.Number',
        'Ext.button.Button',
        'Ext.form.Label'
    ],

    viewModel: {
        type: 'myviewport'
    },
    itemId: 'myviewport2',
    layout: 'border',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'panel',
            region: 'center',
            title: '',
            items: [
                {
                    xtype: 'fieldset',
                    height: 115,
                    id: 'settings_panel',
                    itemId: 'settings_panel',
                    margin: 10,
                    width: 500,
                    title: 'Settings',
                    items: [
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            id: 'txt_session_timeout',
                            itemId: 'txt_session_timeout',
                            maxWidth: 270,
                            fieldLabel: 'Session Timeout (mins)',
                            labelWidth: 170,
                            name: 'txt_session_timeout',
                            value: 30,
                            allowBlank: false,
                            allowOnlyWhitespace: false,
                            allowDecimals: false,
                            allowExponential: false,
                            maxValue: 90,
                            minValue: 15
                        },
                        {
                            xtype: 'button',
                            height: 30,
                            id: 'btn_save_settings',
                            itemId: 'btn_save_settings',
                            margin: '25 0 0 380',
                            width: 90,
                            text: 'Save settings',
                            listeners: {
                                click: 'onBtn_save_settingsClick'
                            }
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    height: 180,
                    id: 'support_panel',
                    itemId: 'support_panel',
                    margin: 10,
                    width: 500,
                    title: 'Support',
                    items: [
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            id: 'txt_support_email',
                            itemId: 'txt_support_email',
                            fieldLabel: 'Your Email',
                            name: 'txt_support_email',
                            inputType: 'email',
                            emptyText: 'email@example.com'
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            id: 'txt_support_ticket',
                            itemId: 'txt_support_ticket',
                            fieldLabel: 'Support Ticket ID',
                            name: 'txt_support_ticket',
                            emptyText: 'Exisitng Support Ticket ID'
                        },
                        {
                            xtype: 'label',
                            style: {
                                color: '#999999'
                            },
                            text: 'Submit diagnostic information to Buurst for technical support purposes. You will receive a link to download the same diagnostic data that is sent to Buurst.'
                        },
                        {
                            xtype: 'button',
                            height: 30,
                            id: 'btn_support_send',
                            itemId: 'btn_support_send',
                            margin: '25 0 0 380',
                            width: 90,
                            text: 'Send',
                            listeners: {
                                click: 'onBtn_support_sendClick'
                            }
                        }
                    ]
                }
            ]
        }
    ],

    onBtn_save_settingsClick: function(button, e, eOpts) {
        var txt_timeout = Ext.ComponentQuery.query("#txt_session_timeout")[0];
        var timeout = txt_timeout.getValue();
        var settings_panel = Ext.ComponentQuery.query("#settings_panel")[0];

        if (timeout < txt_timeout.minValue || timeout > txt_timeout.maxValue) {
            Ext.Msg.alert("Save settings", "Please enter the valid value");
            return;
        }

        settings_panel.setLoading('Saving settings...');
        Ext.Ajax.request({
            url: '/softnas/snserver/snserv.php',
            params: {
                opcode: 'general_settings',
                command: 'update_fuusion_settings',
                timeout: timeout
            },
            success: function(response, opts) {
                settings_panel.setLoading(false);
                var reply = Ext.decode(response.responseText);
                if( !reply.success )
                {
                    Ext.Msg.alert('Operation Error', reply.msg);
                } else {
                    Ext.Msg.alert("Save settings", reply.msg);
                }
            },
            failure: function(response, opts) {
                settings_panel.setLoading(false);
                var reply;
                if( response && response.responseText )
                    reply = Ext.decode(response.responseText);

                if( reply && reply.msg )
                    Ext.Msg.alert('Operation Failed', reply.msg);
                else
                    Ext.Msg.alert('Operation Failed', "Error contacting server. Please resolve any network issues and try again.");
            }
        });

    },

    onBtn_support_sendClick: function(button, e, eOpts) {
        var txt_email = Ext.ComponentQuery.query("#txt_support_email")[0];
        var txt_ticket = Ext.ComponentQuery.query("#txt_support_ticket")[0];
        var support_panel = Ext.ComponentQuery.query("#support_panel")[0];

        var email_value = txt_email.getValue();
        var ticket_value = txt_ticket.getValue();

        if (email_value === "") {
            Ext.Msg.alert('Support', 'You must enter email first!');
            return;
        }
        if (!txt_email.isValid()) {
            Ext.Msg.alert('Support', 'You must enter email in correct format!');
            return;
        }
        if (ticket_value === "") {
            Ext.Msg.alert('Support', 'You must enter ticket first!');
            return;
        }

        support_panel.setLoading("Sending support report, please wait . . .");
        Ext.Ajax.request({
            url: '/softnas/snserver/snserv.php',
            params: {
                opcode: 'support_settings',
                command: 'send',
                email_user: email_value,
                support_ticket: ticket_value
            },
            timeout: 600000,
            success: function(response, opts) {
                support_panel.setLoading(false);
                var reply = Ext.decode(response.responseText);
                if( !reply.success ) {
                    Ext.Msg.alert('Operation Error', reply.msg);
                } else {
                    Ext.Msg.alert("Support", reply.msg);
                }
            },
            failure: function(response, opts) {
                support_panel.setLoading(false);
                var reply;
                if(response && response.responseText) {
                    reply = Ext.decode(response.responseText);
                }
                if(reply && reply.msg) {
                    Ext.Msg.alert('Operation Failed', reply.msg);
                } else {
                    Ext.Msg.alert('Operation Failed', "Error contacting server. Please resolve any network issues and try again.");
                }
            }
        });
    }

});